# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(755, 726)
        font = QtGui.QFont()
        font.setPointSize(10)
        MainWindow.setFont(font)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("../../download 1.2/balance.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setAutoFillBackground(False)
        MainWindow.setStyleSheet("background-color:solid;")
        MainWindow.setIconSize(QtCore.QSize(30, 30))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(20, 30, 551, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.lineEdit.setFont(font)
        self.lineEdit.setStyleSheet("border-radius:5px;\n"
"border:1px black;")
        self.lineEdit.setObjectName("lineEdit")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(600, 30, 131, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("background-color:rgb(255, 255, 0);\n"
"border-radius:5px;")
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(20, 620, 301, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setStyleSheet("background-color:rgb(255, 255, 0);")
        self.pushButton_2.setObjectName("pushButton_2")
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(20, 100, 711, 501))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.textEdit.setFont(font)
        self.textEdit.setObjectName("textEdit")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(360, 630, 71, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(450, 620, 281, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.lineEdit_2.setFont(font)
        self.lineEdit_2.setObjectName("lineEdit_2")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menuBar = QtWidgets.QMenuBar(MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 755, 22))
        self.menuBar.setObjectName("menuBar")
        self.menuHu_n_luy_n = QtWidgets.QMenu(self.menuBar)
        self.menuHu_n_luy_n.setObjectName("menuHu_n_luy_n")
        self.menuHelp = QtWidgets.QMenu(self.menuBar)
        self.menuHelp.setObjectName("menuHelp")
        MainWindow.setMenuBar(self.menuBar)
        self.actionH_ng_d_n_s_d_ng = QtWidgets.QAction(MainWindow)
        self.actionH_ng_d_n_s_d_ng.setObjectName("actionH_ng_d_n_s_d_ng")
        self.actionOpen_File = QtWidgets.QAction(MainWindow)
        self.actionOpen_File.setObjectName("actionOpen_File")
        self.actionSave_File = QtWidgets.QAction(MainWindow)
        self.actionSave_File.setObjectName("actionSave_File")
        self.actionTho_t = QtWidgets.QAction(MainWindow)
        self.actionTho_t.setObjectName("actionTho_t")
        self.actionL_u = QtWidgets.QAction(MainWindow)
        self.actionL_u.setObjectName("actionL_u")
        self.actionL_m_M_i = QtWidgets.QAction(MainWindow)
        self.actionL_m_M_i.setObjectName("actionL_m_M_i")
        self.actionH_ng_d_n_s_d_ng_2 = QtWidgets.QAction(MainWindow)
        self.actionH_ng_d_n_s_d_ng_2.setObjectName("actionH_ng_d_n_s_d_ng_2")
        self.actionT_p_hu_n_luy_n = QtWidgets.QAction(MainWindow)
        self.actionT_p_hu_n_luy_n.setObjectName("actionT_p_hu_n_luy_n")
        self.actionB_t_u_hu_n_luy_n = QtWidgets.QAction(MainWindow)
        self.actionB_t_u_hu_n_luy_n.setObjectName("actionB_t_u_hu_n_luy_n")
        self.actionH_ng_d_n_s_d_ng_3 = QtWidgets.QAction(MainWindow)
        self.actionH_ng_d_n_s_d_ng_3.setObjectName("actionH_ng_d_n_s_d_ng_3")
        self.menuHu_n_luy_n.addAction(self.actionT_p_hu_n_luy_n)
        self.menuHu_n_luy_n.addAction(self.actionB_t_u_hu_n_luy_n)
        self.menuHelp.addAction(self.actionH_ng_d_n_s_d_ng_3)
        self.menuBar.addAction(self.menuHu_n_luy_n.menuAction())
        self.menuBar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Phân loại văn bản"))
        self.lineEdit.setPlaceholderText(_translate("MainWindow", "  Tên file..."))
        self.pushButton.setText(_translate("MainWindow", "Mở File"))
        self.pushButton_2.setText(_translate("MainWindow", "Phân Tích"))
        self.pushButton_2.setShortcut(_translate("MainWindow", "Return"))
        self.label.setText(_translate("MainWindow", "Chủ đề:"))
        self.menuHu_n_luy_n.setTitle(_translate("MainWindow", "Huấn luyện"))
        self.menuHelp.setTitle(_translate("MainWindow", "Trợ giúp"))
        self.actionH_ng_d_n_s_d_ng.setText(_translate("MainWindow", "Hướng dẫn sử dụng"))
        self.actionH_ng_d_n_s_d_ng.setShortcut(_translate("MainWindow", "Ctrl+H"))
        self.actionOpen_File.setText(_translate("MainWindow", "Mở File"))
        self.actionOpen_File.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionSave_File.setText(_translate("MainWindow", "Lưu Kết Quả"))
        self.actionSave_File.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionTho_t.setText(_translate("MainWindow", "Thoát"))
        self.actionTho_t.setShortcut(_translate("MainWindow", "Esc"))
        self.actionL_u.setText(_translate("MainWindow", "Lưu Kết Quả"))
        self.actionL_u.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionL_m_M_i.setText(_translate("MainWindow", "Làm Mới"))
        self.actionL_m_M_i.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.actionH_ng_d_n_s_d_ng_2.setText(_translate("MainWindow", "Hướng dẫn sử dụng"))
        self.actionT_p_hu_n_luy_n.setText(_translate("MainWindow", "Tệp huấn luyện"))
        self.actionB_t_u_hu_n_luy_n.setText(_translate("MainWindow", "Bắt đầu huấn luyện"))
        self.actionH_ng_d_n_s_d_ng_3.setText(_translate("MainWindow", "Hướng dẫn sử dụng"))
import rc_rc
from docx import Document
from PyQt5.QtWidgets import *
import analysis
from utils import util
fullText = []
def openFile():
    path = QFileDialog.getOpenFileName(MainWindow, 'Open a file', '','Docx Files (*.docx);;Text Files (*.txt)')
    if path != ('', ''):
        ui.lineEdit.setText(path[0])
        type = path[0].split(".")
        typeOfFile = type[-1]
        if(typeOfFile == "txt"):
            f = open(path[0], "r",encoding='utf8')
            for item in f:
                fullText.append(str(item).strip())
        elif(typeOfFile == "docx"):
            doc = Document(path[0])
            for para in doc.paragraphs:
                fullText.append((para.text).strip())
    ui.textEdit.setText('\n'.join(fullText))
def analysisText():
    stopWordList = []
    Util = util()
    f = open("stop-words.txt", "r",encoding='utf8')
    Content = f.readlines()
    for line in Content:
        stopWordList.append(line.strip())

    fullTextStr = '\n'.join(fullText)
    fullTextStr = Util.text_util_final(fullTextStr,stopWordList)
    result = analysis.analysis(fullTextStr)
    ui.lineEdit_2.setText(result)

import subprocess as sp
import training
def openTrainingFile():
    programName = "notepad.exe"
    fileName = "./data/train.crash"
    sp.Popen([programName, fileName])

def startTraining():
    score = training.training()
    QMessageBox.about(MainWindow, "Thông báo", "Huấn luyện thành công!"+"\n[accuracy_score = "+str(score) +"]")

def openFileHelp():
    programName = "notepad.exe"
    fileName = "./readme.txt"
    sp.Popen([programName, fileName])

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    ui.pushButton.clicked.connect(openFile)
    ui.pushButton_2.clicked.connect(analysisText)
    ui.actionT_p_hu_n_luy_n.triggered.connect(openTrainingFile)
    ui.actionB_t_u_hu_n_luy_n.triggered.connect(startTraining)
    ui.actionH_ng_d_n_s_d_ng_3.triggered.connect(openFileHelp)
    MainWindow.show()
    sys.exit(app.exec_())
